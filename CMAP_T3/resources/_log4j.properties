#定義 Root Logger 的等級為 INFO,且為其指定一個 appender 名為 rootAppender.
#	ALL < DEBUG < INFO < WARN < ERROR < FATAL < OFF
log4j.rootLogger=ERROR, rootAppender, dailyFile

#指定 rootAppender 的類型.
#	org.apache.log4j.ConsoleAppender（控制台）
#		(1)ConsoleAppender選項：
#			Threshold=WARN：指定日誌訊息的最低輸出級別，預設為DEBUG。
#			ImmediateFlush=true：表示所有訊息都會被立即輸出，設為false則不輸出，預設值是true。
#			Target=System.err：預設值是System.out。
#
#	org.apache.log4j.FileAppender（文件）
#		(2)FileAppender選項：
#			Threshold=WARN：指定日誌訊息的最低輸出級別，默認為DEBUG。
#			ImmediateFlush=true：表示所有訊息都會被立即輸出，設為false則不輸出，預設值是true。
#			Append=false：true表示訊息增加到指定文件中，false則將消息覆蓋指定的文件內容，預設值是true。
#			File=D:/logs/logging.log4j：指定訊息輸出到logging.log4j文件中。
#
#	org.apache.log4j.DailyRollingFileAppender（每天產生一個日誌文件）
#		(3)DailyRollingFileAppender選項：
#			Threshold=WARN：指定日誌訊息的最低輸出級別，預設為DEBUG。
#			ImmediateFlush=true：表示所有訊息都會被立即輸出，設為false則不輸出，預設值是true。
#			Append=false：true表示訊息增加到指定文件中，false則將消息覆蓋指定的文件內容，預設值是true。
#			File=D:/logs/logging.log4j：指定訊息輸出到logging.log4j文件中。
#			DatePattern='.'yyyy-MM：即每月產生一個新的日誌文件。
#			若目前月的日誌文件名為logging.log4j，前一個月的日誌文件名會為為logging.log4j.yyyy-MM
#			另外，也可以指定按周、天、時、分等來滾動日誌文件，對應的格式如下：
#			1)'.'yyyy-MM：每月
#			2)'.'yyyy-ww：每週
#			3)'.'yyyy-MM-dd：每天
#			4)'.'yyyy-MM-dd-a：每天兩次
#			5)'.'yyyy-MM-dd-HH：每小時
#			6)'.'yyyy-MM-dd-HH-mm：每分鐘
#
#			若要有副檔名：
#			'_'yyyy-MM-dd'.log'
#
#	org.apache.log4j.RollingFileAppender（文件大小到達指定size的時候產生一個新的文件）
#		(4)RollingFileAppender選項：
#			Threshold=WARN：指定日誌訊息的最低輸出級別，預設為DEBUG。
#			ImmediateFlush=true：表示所有訊息都會被立即輸出，設為false則不輸出，預設值是true。
#			Append=false：true表示訊息增加到指定文件中，false則將消息覆蓋指定的文件內容，預設值是true。
#			File=D:/logs/logging.log4j：指定訊息輸出到logging.log4j文件中。
#			MaxFileSize=100KB：單位可以是KB, MB 或者GB。在日誌文件到達該大小時，將會自動變更，即將原來的內容移到logging.log4j.1文件中。
#			MaxBackupIndex=2：指定可以產生的變動文件的最大數，例如，設為2則可以產生logging.log4j.1，logging.log4j.2兩個變動文件和一個logging.log4j文件。
#
#	org.apache.log4j.WriterAppender（將日誌訊息以輸出流格式發送到任意指定的地方）
log4j.appender.rootAppender=org.apache.log4j.ConsoleAppender

#指定 rootAppender 的 Layout.
#	org.apache.log4j.HTMLLayout（以HTML表格形式佈局）
#		(1)HTMLLayout選項：
#			LocationInfo=true：輸出java文件名稱和行號，預設值是false。
#			Title=My Logging： 預設值是Log4J Log Messages。
#
#	org.apache.log4j.PatternLayout（可以靈活地指定佈局模式）
#		(2)PatternLayout選項：
#			ConversionPattern=%m%n：設定以怎樣的格式顯示訊息。
#			例如,為 Logger 加入一個 conversion pattern 為 "%r [%t] %-5p %c - %m%n" 的 PatternLayout,則輸出的 log message 就可能會像下列這樣：
#			176 [main] INFO org.foo.Bar - Located nearest gas station.
#
#	org.apache.log4j.SimpleLayout（包含日誌訊息的級別和訊息字符串）
#	org.apache.log4j.TTCCLayout（包含日誌產生的時間、執行緒、類別等訊息）
log4j.appender.rootAppender.layout=org.apache.log4j.PatternLayout

#指定 rootAppender Layout 的輸出格式.
#	格式字元說明：
# 		%c 輸出日誌訊息所屬的類別的全名
# 		%d 輸出日誌時間點的日期或時間，指定格式的方式：%d{yyy-MM-dd HH:mm:ss }。
# 		%l 輸出日誌事件的發生位置，即輸出日誌訊息的語句處於它所在的類別的第幾行。相當於%c.%M(%F:%L)的組合包括類別全名、method、檔案名以及行數例如：test.TestLog4j.main(TestLog4j.java:10)
# 		%m 輸出的訊息，如log(message)中的message。
# 		%n 輸出一個換行符號。
# 		%p 輸出優先階層，即DEBUG，INFO，WARN，ERROR，FATAL。如果是調用debug()輸出的，則為DEBUG，依此類推。
# 		%r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# 		%t 輸出產生該日誌事件的執行緒名。
# 		%r 輸出自應用啟動到輸出該日誌訊息所耗費的毫秒數。
# 		%f 輸出日誌訊息所屬的類別的類別名。
# 		%M 輸出產生日誌的方法名。
# 		%F 輸出日誌時所在的檔案名稱。
# 		%L 輸出行號。
# 		%x 輸出和當前執行緒相關聯的NDC(嵌套診斷環境)，尤其用到像java servlets這樣的多客戶多執行緒的應用中。
# 		%% 輸出一個"%"字符。
#
#	另外，也可以在%與格式字符之間加上修飾符來控制其最小長度、最大長度、對齊方式。如：
#		1) c：指定輸出category的名稱，最小的長度是20，如果category的名稱長度小於20的話，預設的情況下右對齊。
#		2)%-20c："-"號表示左對齊。
#		3)%.30c：指定輸出category的名稱，最大的長度是30，如果category的名稱長度大於30的話，就會將左邊多出的字符截掉，但小於30的話也不會補空格。	
log4j.appender.rootAppender.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
log4j.appender.rootAppender.Threshold=ERROR
log4j.appender.rootAppender.ImmediateFlush=true
log4j.appender.rootAppender.Target=System.err
log4j.appender.rootAppender.layout=org.apache.log4j.PatternLayout

########################################################################################################################
##### [ DailyRollingFileAppender ] #####################################################################################
########################################################################################################################
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender

#指定日志信息的最低输出级别，默认DEBUG
log4j.appender.dailyFile.Threshold=ERROR

#表示所有消息都会被立即输出，设为false则不输出，默认true
log4j.appender.dailyFile.ImmediateFlush=true

#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认true
log4j.appender.dailyFile.Append=true

#指定当前消息输出到logging.log4j文件
log4j.appender.dailyFile.File=D:/log/cmap/CMAP_log.log

#每月滚动一次日志文件，即每月产生一个新的日志文件。当前月的日志文件名为logging.log4j，前一个月的日志文件名为logging.log4j.yyyy-MM
#另外，也可以指定按周、天、时、分等来滚动日志文件，对应的格式如下：
#	1)'.'yyyy-MM：每月
#	2)'.'yyyy-ww：每周
#	3)'.'yyyy-MM-dd：每天
#	4)'.'yyyy-MM-dd-a：每天两次
#	5)'.'yyyy-MM-dd-HH：每小时
#	6)'.'yyyy-MM-dd-HH-mm：每分钟
log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n

########################################################################################################################
##### [ JDBCAppender ] #################################################################################################
########################################################################################################################
#log4j.appender.database=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.database.URL=jdbc:mysql://localhost:3306/cmap?useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=false&useLegacyDatetimeCode=true&serverTimezone=Asia/Taipei&characterEncoding=UTF-8
#log4j.appender.database.driver=com.mysql.jdbc.Driver
#log4j.appender.database.user=root
#log4j.appender.database.password=root1234
#log4j.appender.database.sql=INSERT INTO LOG4J (Message) VALUES('=[%-5p] %d(%r) --> [%t] %l: %m %x %n')
#log4j.appender.database.layout=org.apache.log4j.PatternLayout
#log4j.appender.database.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n

#設定特定名稱的 Logger.
#log4j.logger.yc.usingLog4j.UsingLog4jA=INFO, log4jaAppender
#log4j.appender.log4jaAppender=org.apache.log4j.RollingFileAppender
#log4j.appender.log4jaAppender.File=d:/tmp/usinglog4j.log
#后缀可以是KB,MB或者GB。在日志文件到达该大小时，将会自动滚动，即将原来的内容移到logging.log4j.1文件
#log4j.appender.log4jaAppender.MaxFileSize=100KB
#指定可以产生的滚动文件的最大数，例如，设为2则可以产生logging.log4j.1，logging.log4j.2两个滚动文件和一个logging.log4j文件
#log4j.appender.log4jaAppender.MaxBackupIndex=10
#log4j.appender.log4jaAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.log4jaAppender.layout.ConversionPattern=%c - %m%n


###########################################################################################################
###													範例													###
###########################################################################################################
#	Log4j配置文件實現了輸出到控制台(console)、logFile、rollingFile、發送日誌郵件、輸出到資料庫日誌表、自定義標籤等
#
#log4j.rootLogger=DEBUG,console,dailyFile,im
#log4j.additivity.org.apache=true
#
# 	控制台(console)
#log4j.appender.console=org.apache.log4j.ConsoleAppender
#log4j.appender.console.Threshold=DEBUG
#log4j.appender.console.ImmediateFlush=true
#log4j.appender.console.Target=System.err
#log4j.appender.console.layout=org.apache.log4j.PatternLayout
#log4j.appender.console.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	日誌文件(logFile)
#log4j.appender.logFile=org.apache.log4j.FileAppender
#log4j.appender.logFile.Threshold=DEBUG
#log4j.appender.logFile.ImmediateFlush=true
#log4j.appender.logFile.Append=true
#log4j.appender.logFile.File=D:/logs/log.log4j
#log4j.appender.logFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	rollingFile
#log4j.appender.rollingFile=org.apache.log4j.RollingFileAppender
#log4j.appender.rollingFile.Threshold=DEBUG
#log4j.appender.rollingFile.ImmediateFlush=true
#log4j.appender.rollingFile.Append=true
#log4j.appender.rollingFile.File=D:/logs/log.log4j
#log4j.appender.rollingFile.MaxFileSize=200KB
#log4j.appender.rollingFile.MaxBackupIndex=50
#log4j.appender.rollingFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.rollingFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	定期變更檔案(dailyFile)
#log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.dailyFile.Threshold=DEBUG
#log4j.appender.dailyFile.ImmediateFlush=true
#log4j.appender.dailyFile.Append=true
#log4j.appender.dailyFile.File=D:/logs/log.log4j
#log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd
#log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
#log4j.appender.dailyFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	應用於socket
#log4j.appender.socket=org.apache.log4j.RollingFileAppender
#log4j.appender.socket.RemoteHost=localhost
#log4j.appender.socket.Port=5001
#log4j.appender.socket.LocationInfo=true
# Set up for Log Factor 5
#log4j.appender.socket.layout=org.apache.log4j.PatternLayout
#log4j.appender.socket.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
# Log Factor 5 Appender
#log4j.appender.LF5_APPENDER=org.apache.log4j.lf5.LF5Appender
#log4j.appender.LF5_APPENDER.MaxNumberOfRecords=2000
#
# 	發送日誌到指定郵件
#log4j.appender.mail=org.apache.log4j.net.SMTPAppender
#log4j.appender.mail.Threshold=FATAL
#log4j.appender.mail.BufferSize=10
#log4j.appender.mail.From = xxx@mail.com
#log4j.appender.mail.SMTPHost=mail.com
#log4j.appender.mail.Subject=Log4J Message
#log4j.appender.mail.To= xxx@mail.com
#log4j.appender.mail.layout=org.apache.log4j.PatternLayout
#log4j.appender.mail.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	應用於資料庫
#log4j.appender.database=org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.database.URL=jdbc:mysql://localhost:3306/test
#log4j.appender.database.driver=com.mysql.jdbc.Driver
#log4j.appender.database.user=root
#log4j.appender.database.password=
#log4j.appender.database.sql=INSERT INTO LOG4J (Message) VALUES('=[%-5p] %d(%r) --> [%t] %l: %m %x %n')
#log4j.appender.database.layout=org.apache.log4j.PatternLayout
#log4j.appender.database.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
#
# 	自定義Appender
#log4j.appender.im = net.cybercorlin.util.logger.appender.IMAppender
#log4j.appender.im.host = mail.cybercorlin.net
#log4j.appender.im.username = username
#log4j.appender.im.password = password
#log4j.appender.im.recipient = corlin@cybercorlin.net
#log4j.appender.im.layout=org.apache.log4j.PatternLayout
#log4j.appender.im.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n